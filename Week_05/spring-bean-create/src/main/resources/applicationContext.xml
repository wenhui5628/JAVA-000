<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd"
       default-autowire="byName">

    <!-- 1、基于xml的普通装配 -->
    <bean id="student" class="com.geek.homework.week5.bean.xml.Student">
        <constructor-arg value="张三"/>
    </bean>

    <!--
        2、byName形式的自动装配
        byName自动装配的执行过程：在这个Bean的定义中，找到setter方法，这里是setStudent()，
        其name是student，
        根据这个name（student）找打到id/name是student的Bean实例，将这个实例自动注入
        说明：自动装配只能完成setter形式的依赖注入，不能完成构造器方式的依赖注入，
        且只能注入其它Bean，不能注入String、数组、集合等Java自带的类型
     -->
    <bean id="teacher1" class="com.geek.homework.week5.bean.xml.Teacher" autowire="byName"/>

    <!--
        3、根据要注入的Bean的类型来自动装配
        byType自动装配的执行过程：在这个Bean的定义中，找到setter方法，
        找到setter方法要注入的Bean的类型（Student），在Spring容器中找到Student类型的实例，注入
    -->
    <!--
        4、如果Spring容器中该依赖有多个配置，比如：张三和李四两个配置，都是student类型，
        则会报错，Spring容器不知道要注入的依赖是哪一个
    -->
    <!--<bean id="student11" class="com.geek.homework.week5.bean.xml.Student">-->
        <!--<constructor-arg value="张三"/>-->
    <!--</bean>-->
    <!--<bean id="student1" class="com.geek.homework.week5.bean.xml.Student">-->
        <!--<constructor-arg value="李四"/>-->
    <!--</bean>-->

    <bean id="teacher2" class="com.geek.homework.week5.bean.xml.Teacher" autowire="byType"/>

    <!--
        用构造器注入依赖，Spring容器会自动根据构造器中参数类型，用byType方式注入对应类型的依赖
        只能有一个构造器，否则Spring容器不知道使用哪个构造器
    -->
    <bean id="teacher3" class="com.geek.homework.week5.bean.xml.Teacher" autowire="constructor"/>

    <!--
        在<beans>中设置默认的自动装配方式，在需要使用自动装配的<bean>指定autowire="default"，
        这样该<bean>使用的自动装配方式就是<beans>中设置的默认方式 -->
    <bean id="teacher4" class="com.geek.homework.week5.bean.xml.Teacher" autowire="default"/>

    <!--
        使用注解的方式注入bean，基于注解的装配都需要用<context:annotation-config />开启注解装配，
        这句代码是告诉Spring容器，下面的这些bean使用的是注解装配
    -->
    <context:annotation-config />
    <!-- 用@Autowired -->
    <bean id="teacher5" class="com.geek.homework.week5.bean.annotation.Teacher"/>

    <!-- 用@Autowired和@Qualifier(value="student2")-->
    <bean id="student2" class="com.geek.homework.week5.bean.annotation.Student">
        <constructor-arg value="张三"/>
    </bean>
    <bean id="teacher6" class="com.geek.homework.week5.bean.annotation.Teacher2"/>

    <!-- @Resource方式 -->
    <bean id="teacher7" class="com.geek.homework.week5.bean.annotation.Teacher3"/>

    <!--
        使用@Service和component-scan
        会自动开启注解，所以不必再写context:annotataion-config
     -->
    <context:component-scan base-package="com.geek.homework.week5.bean.annotation.service"/>
    <bean id="student3" class="com.geek.homework.week5.bean.annotation.service.Student"/>
</beans>